"use strict";
module.exports=earcut;
module.exports.default=earcut;
function earcut(e,n,r){r=r||2;var t=n&&n.length,i=t?n[0]*r:e.length,x=linkedList(e,0,i,r,true),a=[];if(!x||x.next===x.prev)return a;var l,u,o,f,s,v,y;if(t)x=eliminateHoles(e,n,x,r);if(e.length>80*r){l=o=e[0];u=f=e[1];for(var p=r;p<i;p+=r){s=e[p];v=e[p+1];if(s<l)l=s;if(v<u)u=v;if(s>o)o=s;if(v>f)f=v}y=Math.max(o-l,f-u);y=y!==0?1/y:0}earcutLinked(x,a,r,l,u,y);return a}
function linkedList(e,n,r,t,i){var x,a;if(i===signedArea(e,n,r,t)>0){for(x=n;x<r;x+=t)a=insertNode(x,e[x],e[x+1],a)}else{for(x=r-t;x>=n;x-=t)a=insertNode(x,e[x],e[x+1],a)}if(a&&equals(a,a.next)){removeNode(a);a=a.next}return a}
function filterPoints(e,n){if(!e)return e;if(!n)n=e;var r=e,t;do{t=false;if(!r.steiner&&(equals(r,r.next)||area(r.prev,r,r.next)===0)){removeNode(r);r=n=r.prev;if(r===r.next)break;t=true}else{r=r.next}}while(t||r!==n);return n}
function earcutLinked(e,n,r,t,i,x,a){if(!e)return;if(!a&&x)indexCurve(e,t,i,x);var l=e,u,o;while(e.prev!==e.next){u=e.prev;o=e.next;if(x?isEarHashed(e,t,i,x):isEar(e)){n.push(u.i/r);n.push(e.i/r);n.push(o.i/r);removeNode(e);e=o.next;l=o.next;continue}e=o;if(e===l){if(!a){earcutLinked(filterPoints(e),n,r,t,i,x,1)}else if(a===1){e=cureLocalIntersections(e,n,r);earcutLinked(e,n,r,t,i,x,2)}else if(a===2){splitEarcut(e,n,r,t,i,x)}break}}}
function isEar(e){var n=e.prev,r=e,t=e.next;if(area(n,r,t)>=0)return false;var i=e.next.next;while(i!==e.prev){if(pointInTriangle(n.x,n.y,r.x,r.y,t.x,t.y,i.x,i.y)&&area(i.prev,i,i.next)>=0)return false;i=i.next}return true}
function isEarHashed(e,n,r,t){var i=e.prev,x=e,a=e.next;if(area(i,x,a)>=0)return false;var l=i.x<x.x?i.x<a.x?i.x:a.x:x.x<a.x?x.x:a.x,u=i.y<x.y?i.y<a.y?i.y:a.y:x.y<a.y?x.y:a.y,o=i.x>x.x?i.x>a.x?i.x:a.x:x.x>a.x?x.x:a.x,f=i.y>x.y?i.y>a.y?i.y:a.y:x.y>a.y?x.y:a.y;var s=zOrder(l,u,n,r,t),v=zOrder(o,f,n,r,t);var y=e.prevZ,p=e.nextZ;while(y&&y.z>=s&&p&&p.z<=v){if(y!==e.prev&&y!==e.next&&pointInTriangle(i.x,i.y,x.x,x.y,a.x,a.y,y.x,y.y)&&area(y.prev,y,y.next)>=0)return false;y=y.prevZ;if(p!==e.prev&&p!==e.next&&pointInTriangle(i.x,i.y,x.x,x.y,a.x,a.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.nextZ}while(y&&y.z>=s){if(y!==e.prev&&y!==e.next&&pointInTriangle(i.x,i.y,x.x,x.y,a.x,a.y,y.x,y.y)&&area(y.prev,y,y.next)>=0)return false;y=y.prevZ}while(p&&p.z<=v){if(p!==e.prev&&p!==e.next&&pointInTriangle(i.x,i.y,x.x,x.y,a.x,a.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.nextZ}return true}
function cureLocalIntersections(e,n,r){var t=e;do{var i=t.prev,x=t.next.next;if(!equals(i,x)&&intersects(i,t,t.next,x)&&locallyInside(i,x)&&locallyInside(x,i)){n.push(i.i/r);n.push(t.i/r);n.push(x.i/r);removeNode(t);removeNode(t.next);t=e=x}t=t.next}while(t!==e);return t}
function splitEarcut(e,n,r,t,i,x){var a=e;do{var l=a.next.next;while(l!==a.prev){if(a.i!==l.i&&isValidDiagonal(a,l)){var u=splitPolygon(a,l);a=filterPoints(a,a.next);u=filterPoints(u,u.next);earcutLinked(a,n,r,t,i,x);earcutLinked(u,n,r,t,i,x);return}l=l.next}a=a.next}while(a!==e)}
function eliminateHoles(e,n,r,t){var i=[],x,a,l,u,o;for(x=0,a=n.length;x<a;x++){l=n[x]*t;u=x<a-1?n[x+1]*t:e.length;o=linkedList(e,l,u,t,false);if(o===o.next)o.steiner=true;i.push(getLeftmost(o))}i.sort(compareX);for(x=0;x<i.length;x++){eliminateHole(i[x],r);r=filterPoints(r,r.next)}return r}
function compareX(e,n){return e.x-n.x}
function eliminateHole(e,n){n=findHoleBridge(e,n);if(n){var r=splitPolygon(n,e);filterPoints(r,r.next)}}
function findHoleBridge(e,n){var r=n,t=e.x,i=e.y,x=-Infinity,a;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var l=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(l<=t&&l>x){x=l;if(l===t){if(i===r.y)return r;if(i===r.next.y)return r.next}a=r.x<r.next.x?r:r.next}}r=r.next}while(r!==n);if(!a)return null;if(t===x)return a.prev;var u=a,o=a.x,f=a.y,s=Infinity,v;r=a.next;while(r!==u){if(t>=r.x&&r.x>=o&&t!==r.x&&pointInTriangle(i<f?t:x,i,o,f,i<f?x:t,i,r.x,r.y)){v=Math.abs(i-r.y)/(t-r.x);if((v<s||v===s&&r.x>a.x)&&locallyInside(r,e)){a=r;s=v}}r=r.next}return a}
function indexCurve(e,n,r,t){var i=e;do{if(i.z===null)i.z=zOrder(i.x,i.y,n,r,t);i.prevZ=i.prev;i.nextZ=i.next;i=i.next}while(i!==e);i.prevZ.nextZ=null;i.prevZ=null;sortLinked(i)}
function sortLinked(e){var n,r,t,i,x,a,l,u,o=1;do{r=e;e=null;x=null;a=0;while(r){a++;t=r;l=0;for(n=0;n<o;n++){l++;t=t.nextZ;if(!t)break}u=o;while(l>0||u>0&&t){if(l!==0&&(u===0||!t||r.z<=t.z)){i=r;r=r.nextZ;l--}else{i=t;t=t.nextZ;u--}if(x)x.nextZ=i;else e=i;i.prevZ=x;x=i}r=t}x.nextZ=null;o*=2}while(a>1);return e}
function zOrder(e,n,r,t,i){e=32767*(e-r)*i;n=32767*(n-t)*i;e=(e|e<<8)&16711935;e=(e|e<<4)&252645135;e=(e|e<<2)&858993459;e=(e|e<<1)&1431655765;n=(n|n<<8)&16711935;n=(n|n<<4)&252645135;n=(n|n<<2)&858993459;n=(n|n<<1)&1431655765;return e|n<<1}
function getLeftmost(e){var n=e,r=e;do{if(n.x<r.x||n.x===r.x&&n.y<r.y)r=n;n=n.next}while(n!==e);return r}
function pointInTriangle(e,n,r,t,i,x,a,l){return(i-a)*(n-l)-(e-a)*(x-l)>=0&&(e-a)*(t-l)-(r-a)*(n-l)>=0&&(r-a)*(x-l)-(i-a)*(t-l)>=0}
function isValidDiagonal(e,n){return e.next.i!==n.i&&e.prev.i!==n.i&&!intersectsPolygon(e,n)&&locallyInside(e,n)&&locallyInside(n,e)&&middleInside(e,n)}
function area(e,n,r){return(n.y-e.y)*(r.x-n.x)-(n.x-e.x)*(r.y-n.y)}
function equals(e,n){return e.x===n.x&&e.y===n.y}
function intersects(e,n,r,t){if(equals(e,r)&&equals(n,t)||equals(e,t)&&equals(r,n))return true;return area(e,n,r)>0!==area(e,n,t)>0&&area(r,t,e)>0!==area(r,t,n)>0}
function intersectsPolygon(e,n){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==n.i&&r.next.i!==n.i&&intersects(r,r.next,e,n))return true;r=r.next}while(r!==e);return false}
function locallyInside(e,n){return area(e.prev,e,e.next)<0?area(e,n,e.next)>=0&&area(e,e.prev,n)>=0:area(e,n,e.prev)<0||area(e,e.next,n)<0}
function middleInside(e,n){var r=e,t=false,i=(e.x+n.x)/2,x=(e.y+n.y)/2;do{if(r.y>x!==r.next.y>x&&r.next.y!==r.y&&i<(r.next.x-r.x)*(x-r.y)/(r.next.y-r.y)+r.x)t=!t;r=r.next}while(r!==e);return t}
function splitPolygon(e,n){var r=new Node(e.i,e.x,e.y),t=new Node(n.i,n.x,n.y),i=e.next,x=n.prev;e.next=n;n.prev=e;r.next=i;i.prev=r;t.next=r;r.prev=t;x.next=t;t.prev=x;return t}
function insertNode(e,n,r,t){var i=new Node(e,n,r);if(!t){i.prev=i;i.next=i}else{i.next=t.next;i.prev=t;t.next.prev=i;t.next=i}return i}
function removeNode(e){e.next.prev=e.prev;e.prev.next=e.next;if(e.prevZ)e.prevZ.nextZ=e.nextZ;if(e.nextZ)e.nextZ.prevZ=e.prevZ}
function Node(e,n,r){this.i=e;this.x=n;this.y=r;this.prev=null;this.next=null;this.z=null;this.prevZ=null;this.nextZ=null;this.steiner=false}
earcut.deviation=function(e,n,r,t){var i=n&&n.length;var x=i?n[0]*r:e.length;var a=Math.abs(signedArea(e,0,x,r));if(i){for(var l=0,u=n.length;l<u;l++){var o=n[l]*r;var f=l<u-1?n[l+1]*r:e.length;a-=Math.abs(signedArea(e,o,f,r))}}var s=0;for(l=0;l<t.length;l+=3){var v=t[l]*r;var y=t[l+1]*r;var p=t[l+2]*r;s+=Math.abs((e[v]-e[p])*(e[y+1]-e[v+1])-(e[v]-e[y])*(e[p+1]-e[v+1]))}return a===0&&s===0?0:Math.abs((s-a)/a)};
function signedArea(e,n,r,t){var i=0;for(var x=n,a=r-t;x<r;x+=t){i+=(e[a]-e[x])*(e[x+1]+e[a+1]);a=x}return i}
earcut.flatten=function(e){var n=e[0][0].length,r={vertices:[],holes:[],dimensions:n},t=0;for(var i=0;i<e.length;i++){for(var x=0;x<e[i].length;x++){for(var a=0;a<n;a++)r.vertices.push(e[i][x][a])}if(i>0){t+=e[i-1].length;r.holes.push(t)}}return r};
